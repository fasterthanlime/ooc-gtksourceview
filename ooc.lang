<?xml version="1.0" encoding="UTF-8"?>
<language id="ooc" _name="ooc" version="2.0" _section="Sources">
  <metadata>
    <property name="mimetypes">text/x-ooc</property>
    <property name="globs">*.ooc</property>
    <property name="line-comment-start">//</property>
    <property name="block-comment-start">/*</property>
    <property name="block-comment-end">*/</property>
  </metadata>

  <styles>
    <style id="comment" _name="Comment" map-to="def:comment"/>
    <style id="error" _name="Error" map-to="def:error"/>
    <style id="escaped-character" _name="Escaped Character" map-to="def:special-char"/>
    <style id="string" _name="String" map-to="def:string"/>
    <style id="external" _name="External" map-to="def:preprocessor"/>
    <style id="declaration" _name="Declaration" map-to="def:type"/>
    <style id="storage-class" _name="Storage Class" map-to="def:type"/>
    <style id="scope-declaration" _name="Scope Declaration" map-to="def:type"/>
    <style id="keyword" _name="Keyword" map-to="def:keyword"/>
    <style id="null-value" _name="Null Value" map-to="def:special-constant"/>
    <style id="boolean" _name="Boolean value" map-to="def:boolean"/>
    <style id="number" _name="Number" map-to="def:decimal"/>
    <style id="reserved" _name="Future Reserved Keywords" map-to="def:error"/>
    <style id="type" _name="Data Type" map-to="def:type"/>
  </styles>

  <definitions>

    <define-regex id="escaped-character" extended="true">
      \\(               # leading backslash
      [\\\"\'nrbtf] |   # escaped character
      [0-9]{1,3}    |   # latin encoded char
      u[0-9]{1,4}       # unicode char
      )
    </define-regex>

    <context id="string" style-ref="string" end-at-line-end="false">
      <start>"</start>
      <end>"</end>
      <include>
        <context id="escaped-character" style-ref="escaped-character">
          <match>\%{escaped-character}</match>
        </context>
      </include>
    </context>

    <context id="line-comment" style-ref="comment" end-at-line-end="true">
      <start>//</start>
      <include>
        <context ref="def:in-line-comment"/>
      </include>
    </context>

    <context id="block-comment" style-ref="comment">
      <start>/\*</start>
      <end>\*/</end>
      <include>
        <context ref="def:in-comment"/>
      </include>
    </context>

    <context id="close-comment-outside-comment" style-ref="error">
      <match>\*/(?!\*)</match>
    </context>

    <context id="externals" style-ref="external">
      <keyword>import</keyword>
      <keyword>include</keyword>
      <keyword>use</keyword>
    </context>

    <context id="declarations" style-ref="declaration">
      <keyword>class</keyword>
      <keyword>cover</keyword>
      <keyword>implement</keyword>
      <keyword>interface</keyword>
      <keyword>operator</keyword>
    </context>

    <context id="primitive-types" style-ref="type">
      <keyword>Int</keyword>
      <keyword>Int8</keyword>
      <keyword>Int16</keyword>
      <keyword>Int32</keyword>
      <keyword>Int64</keyword>
      <keyword>Int80</keyword>
      <keyword>Int128</keyword>
    
      <keyword>UInt</keyword>
      <keyword>UInt8</keyword>
      <keyword>UInt16</keyword>
      <keyword>UInt32</keyword>
      <keyword>UInt64</keyword>
      <keyword>UInt80</keyword>
      <keyword>UInt128</keyword>
    
      <keyword>Octet</keyword>
      <keyword>Short</keyword>
      <keyword>UShort</keyword>
      <keyword>Long</keyword>
      <keyword>ULong</keyword>
      <keyword>LLong</keyword>
      <keyword>ULLong</keyword>
    
      <keyword>Float</keyword>
      <keyword>Double</keyword>
      <keyword>LDouble</keyword>
      <keyword>Float32</keyword>
      <keyword>Float64</keyword>
      <keyword>Float128</keyword>
      
      <keyword>Char</keyword>
      <keyword>UChar</keyword>
      <keyword>SChar</keyword>
      <keyword>WChar</keyword>
      <keyword>String</keyword>
     
      <keyword>Void</keyword>
      <keyword>Pointer</keyword>
      <keyword>Bool</keyword>
      <keyword>SizeT</keyword>
      <keyword>This</keyword>
    </context>

    <context id="storage-class" style-ref="storage-class">
      <keyword>abstract</keyword>
      <keyword>static</keyword>
      <keyword>final</keyword>
      <keyword>extern</keyword>
      <keyword>const</keyword>
      <keyword>proto</keyword>
    </context>

    <context id="scope-declarations" style-ref="scope-declaration">
      <keyword>private</keyword>
      <keyword>protected</keyword>
      <keyword>public</keyword>
      <keyword>internal</keyword>
    </context>

    <context id="flow" style-ref="keyword">
      <keyword>as</keyword>
      <keyword>break</keyword>
      <keyword>continue</keyword>
      <keyword>else</keyword>
      <keyword>fallthrough</keyword>
      <keyword>finally</keyword>
      <keyword>for</keyword>
      <keyword>if</keyword>
      <keyword>match</keyword>
      <keyword>return</keyword>
      <keyword>while</keyword>
    </context>

    <context id="memory" style-ref="keyword">
      <keyword>new</keyword> <!-- new isn't really a keyword, but its nice to have it colored =) -->
      <keyword>this</keyword> <!-- same here -->
    </context>

    <context id="future-reserved-words" style-ref="reserved">
      <keyword>catch</keyword>
      <keyword>const</keyword>
      <keyword>goto</keyword>
      <keyword>finally</keyword>
      <keyword>throw</keyword>
      <keyword>try</keyword>
      <keyword>with</keyword>
      <keyword>scope</keyword>
    </context>

    <context id="null-value" style-ref="null-value">
      <keyword>null</keyword>
    </context>

    <context id="boolean" style-ref="boolean">
      <keyword>false</keyword>
      <keyword>true</keyword>
    </context>

    <context id="numeric" style-ref="number">
      <match extended="true">
        (\b([0-9]+|0[xX][0-9a-fA-F]+)[Ll]?\b|
         \b(([0-9]+[Ee][-]?[0-9]+|
            ([0-9]*\.[0-9]+|[0-9]+\.)([Ee][-]?[0-9]+)?)[fFdD]?|
            [0-9]+[FfDd]))
      </match>
    </context>

    <context id="ooc">
      <include>
        <context ref="string"/>
        <context ref="line-comment"/>
        <context ref="block-comment"/>
        <context ref="close-comment-outside-comment"/>
        <context ref="externals"/>
        <context ref="declarations"/>
        <context ref="primitive-types"/>
        <context ref="storage-class"/>
        <context ref="scope-declarations"/>
        <context ref="flow"/>
        <context ref="memory"/>
        <context ref="future-reserved-words"/>
        <context ref="null-value"/>
        <context ref="boolean"/>
        <context ref="numeric"/>
      </include>
    </context>

  </definitions>
</language>
